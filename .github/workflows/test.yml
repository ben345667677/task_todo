name: Test and Deploy

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test
        run: |
          docker compose up -d --build
          docker wait test_client
          logs_test=$(docker logs test_client)
          if [[ "$logs_test" == *"1"* ]]; then
            echo "❌ הטסט נכשל - לוג מכיל 1"
            docker compose down -v
            exit 1
          elif [[ "$logs_test" == *"0"* ]]; then
            echo "✅ הטסט הצליח - לוג מכיל 0"
            docker compose down -v
            exit 0
          else
            echo "⚠️ לא נמצא 1 או 0 בלוגים – נחשב ככישלון"
            echo "Test logs: $logs_test"
            docker compose down -v
            exit 1
          fi

  build_and_deploy:
    needs: test
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-todo-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/flask-todo-app:latest
          echo "✅ האימג' הועלה ל-Docker Hub!"

<<<<<<< HEAD
  deploy_to_aws:
    needs: build_and_deploy
    runs-on: ubuntu-latest
    env:
      AWS_PEM: ${{ secrets.AWS_PEM }}
      AWS_USER: ${{ secrets.AWS_USER }}
      AWS_IP: ${{ secrets.AWS_IP }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup SSH and Deploy
        run: |
          mkdir -p ~/.ssh
          echo "$AWS_PEM" > ~/.ssh/aws_key.pem
          chmod 600 ~/.ssh/aws_key.pem
          ssh -i ~/.ssh/aws_key.pem -o StrictHostKeyChecking=no $AWS_USER@$AWS_IP "cd /home/$AWS_USER/task-todo-main && rm -rf *"
          scp -i ~/.ssh/aws_key.pem docker-compose.yml $AWS_USER@$AWS_IP:/home/$AWS_USER/task-todo-main/
          ssh -i ~/.ssh/aws_key.pem $AWS_USER@$AWS_IP "cd /home/$AWS_USER/task-todo-main && docker-compose up -d --build"
          echo "✅ Deployment הושלם!"
=======
          deploy_to_aws:
            needs: build_and_deploy
            runs-on: ubuntu-latest
            env:
              AWS_PEM: ${{ secrets.AWS_PEM }}
              AWS_USER: ${{ secrets.AWS_USER }}
              AWS_IP: ${{ secrets.AWS_IP }}
            steps:
              - uses: actions/checkout@v3
              - name: Create .env file
                run: |
                  # יצירת קובץ .env
                  cat > .env << EOF
                  AWS_PEM="$AWS_PEM"
                  AWS_USER="$AWS_USER"
                  AWS_IP="$AWS_IP"
                  DOCKER_USERNAME="${{ secrets.DOCKER_USERNAME }}"
                  DOCKER_IMAGE="${{ secrets.DOCKER_USERNAME }}/flask-todo-app:latest"
                  EOF
                  echo "✅ קובץ .env נוצר!"
                  cat .env
              - name: Setup SSH and Deploy
                run: |
                  # יצירת תיקיית SSH
                  mkdir -p ~/.ssh
                  
                  # שמירת ה-private key
                  echo "$AWS_PEM" > ~/.ssh/aws_key.pem
                  chmod 600 ~/.ssh/aws_key.pem
                  
                  # העברת קבצים לשרת
                  echo "📦 מעביר קבצים לשרת..."
                  scp -i ~/.ssh/aws_key.pem .env docker-compose.yml $AWS_USER@$AWS_IP:/home/$AWS_USER/task-todo-main/
                  
                  # הפעלת docker-compose
                  echo "�� מפעיל docker-compose..."
                  ssh -i ~/.ssh/aws_key.pem $AWS_USER@$AWS_IP "cd /home/$AWS_USER/task-todo-main && docker-compose up -d --build"
                  
                  echo "✅ Deployment הושלם בהצלחה!"
>>>>>>> origin/main
