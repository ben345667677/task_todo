name: Test and Deploy to AWS

on: [push, pull_request]

env:
  AWS_HOST: ec2-13-218-113-24.compute-1.amazonaws.com
  AWS_USER: ec2-user
  AWS_KEY: ${{ secrets.AWS_PEM }}

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Test
      timeout-minutes: 15
      run: |
        set -e  # יציאה בשגיאה
        
        echo "Starting Docker services..."
        docker compose up -d
        
        echo "Waiting for services to be ready..."
        sleep 30
        
        echo "Running tests..."
        # הרצת הבדיקה ושמירת הלוג
        if TEST_OUTPUT=$(docker compose run --rm test_client python server_test.py 2>&1); then
          echo "Test command executed successfully"
          echo "Test output: $TEST_OUTPUT"
          
          # בדיקה אם הפלט מכיל "0" (הצלחה)
          if echo "$TEST_OUTPUT" | grep -q "^0$"; then
            echo "✅ SUCCESS: Test passed - output contains 0"
          else
            echo "❌ FAILED: Test failed - output is '$TEST_OUTPUT' (expected 0)"
            docker compose down
            exit 1
          fi
        else
          echo "❌ FAILED: Test command failed to execute"
          docker compose down
          exit 1
        fi
        
        echo "Cleaning up Docker services..."
        docker compose down
    
    - name: Deploy to AWS EC2
      if: success()
      timeout-minutes: 15
      run: |
        set -e  # יציאה בשגיאה
        
        echo "🚀 Starting AWS deployment..."
        
        # יצירת קובץ זיפ של הפרויקט
        ZIP_NAME="task_todo_$(date +%Y%m%d_%H%M%S).zip"
        echo "📦 Creating zip file: $ZIP_NAME"
        zip -r $ZIP_NAME . -x "venv/*" "__pycache__/*" "*.pyc" "*.pyo" ".git/*" ".gitignore"
        
        # שמירת מפתח SSH זמני
        echo "🔑 Setting up SSH key..."
        mkdir -p ~/.ssh
        
        # שמירת המפתח עם קידוד נכון
        printf '%s\n' "$AWS_KEY" > ~/.ssh/aws_key
        chmod 600 ~/.ssh/aws_key
        
        # בדיקת המפתח
        echo "🔍 Checking SSH key format..."
        head -1 ~/.ssh/aws_key
        echo "Key length: $(wc -c < ~/.ssh/aws_key) characters"
        
        # בדיקת תקינות המפתח
        echo "🔍 Validating SSH key..."
        ssh-keygen -l -f ~/.ssh/aws_key || echo "Key validation failed"
        
        # בדיקת סוג המפתח
        echo "🔍 Key type check..."
        if grep -q "BEGIN RSA PRIVATE KEY" ~/.ssh/aws_key; then
            echo "✅ RSA Private Key detected"
        elif grep -q "BEGIN PRIVATE KEY" ~/.ssh/aws_key; then
            echo "✅ OpenSSH Private Key detected"
        else
            echo "❌ Unknown key type"
        fi
        
        # הוספת AWS host ל-known hosts
        ssh-keyscan -H $AWS_HOST >> ~/.ssh/known_hosts
        
        # בדיקת חיבור SSH
        echo "🔍 Testing SSH connection..."
        ssh -i ~/.ssh/aws_key -o ConnectTimeout=10 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $AWS_USER@$AWS_HOST "echo 'SSH connection successful'" || {
            echo "❌ SSH connection failed. Checking key details..."
            echo "Key file exists: $(ls -la ~/.ssh/aws_key)"
            echo "Key permissions: $(stat -c '%a' ~/.ssh/aws_key)"
            echo "First few lines of key:"
            head -3 ~/.ssh/aws_key
            exit 1
        }
        
        # העברת קובץ הזיפ ל-AWS
        echo "📤 Uploading zip file to AWS..."
        scp -i ~/.ssh/aws_key -o StrictHostKeyChecking=no $ZIP_NAME $AWS_USER@$AWS_HOST:~/
        
        # חיבור ל-AWS וביצוע הפריסה
        echo "🔧 Connecting to AWS and deploying..."
        ssh -i ~/.ssh/aws_key -o StrictHostKeyChecking=no $AWS_USER@$AWS_HOST << ENDSSH
            set -e
            
            echo "📁 Checking for 'web' directory..."
            if [ ! -d "web" ]; then
                echo "📁 Creating 'web' directory..."
                mkdir -p web
            fi
            
            echo "📂 Entering 'web' directory..."
            cd web
            
            echo "🔧 Setting up Docker permissions..."
            # הוספת ec2-user לקבוצת docker
            sudo usermod -aG docker ec2-user || true
            
            # הפעלת Docker service
            sudo systemctl start docker || true
            sudo systemctl enable docker || true
            
            echo "🗑️ Cleaning up old files and containers..."
            # עצירת ומחיקת כל containers
            sudo docker compose down --remove-orphans 2>/dev/null || true
            
            # מחיקת כל images
            sudo docker system prune -a -f
            
            # מחיקת כל הקבצים הישנים
            rm -rf * .* 2>/dev/null || true
            
            echo "📦 Extracting new zip file..."
            unzip -q ~/$ZIP_NAME
            
            echo "🗑️ Removing zip file..."
            rm ~/$ZIP_NAME
            
            echo "🐳 Running docker compose up with fresh build..."
            sudo docker compose up -d --build --force-recreate
            
            echo "📊 Container status:"
            sudo docker compose ps
            
            echo "✅ Deployment completed successfully!"
            echo "🌐 Application should be available at: http://$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4):5000"
ENDSSH
        
        # ניקוי מקומי
        echo "🧹 Cleaning up local files..."
        rm $ZIP_NAME
        rm ~/.ssh/aws_key
        
        echo "🎉 AWS deployment completed successfully!"