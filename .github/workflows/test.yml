name: Test and Deploy

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test
        run: |
          docker compose up -d --build
          docker wait test_client
          logs_test=$(docker logs test_client)
          if [[ "$logs_test" == *"1"* ]]; then
            echo "❌ הטסט נכשל - לוג מכיל 1"
            docker compose down -v
            exit 1
          elif [[ "$logs_test" == *"0"* ]]; then
            echo "✅ הטסט הצליח - לוג מכיל 0"
            docker compose down -v
            exit 0
          else
            echo "⚠️ לא נמצא 1 או 0 בלוגים – נחשב ככישלון"
            echo "Test logs: $logs_test"
            docker compose down -v
            exit 1
          fi

  build_and_deploy:
    needs: test
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-todo-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/flask-todo-app:latest
          echo "✅ האימג' הועלה ל-Docker Hub!"

  deploy_to_aws:
    needs: build_and_deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to AWS
        run: |
      - name: Deploy to AWS
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_PEM }}" > ~/.ssh/aws_key.pem
          chmod 600 ~/.ssh/aws_key.pem
          ssh -i ~/.ssh/aws_key.pem ${{ secrets.AWS_USER }}@${{ secrets.AWS_IP }} "cd /home/${{ secrets.AWS_USER }}/task-todo-main && rm -rf *"
          scp -i ~/.ssh/aws_key.pem docker-compose.yml ${{ secrets.AWS_USER }}@${{ secrets.AWS_IP }}:/home/${{ secrets.AWS_USER }}/task-todo-main/

          echo "✅ Deployment הושלם!"